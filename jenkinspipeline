pipeline{
    agent any
        tools{
            jdk "jdk"
            maven "maven"
        }
	environment {
        SCANNER_HOME=tool 'sonar-scanner'
        }
        stages{
            stage ('Clean'){
                steps{
                cleanWs()    
                }
            }
            stage ('checkoutscm'){
                steps{
                    checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/rameshbabuts/Azai_amazon-eks-jenkins-terraform-aj7.git']])
                }
            }
            stage ("maven compile"){
                steps{
                    sh 'mvn clean compile'
                }
            }
            stage("Sonarqube Analysis"){
                steps{
                    script{
                        withSonarQubeEnv(credentialsId: 'Sonar-token') {
                        sh 'mvn sonar:sonar'
                        }    
                    }
                }
            }
            stage("Build"){
            steps{
                sh " mvn clean install"
            }
        }

          stage("OWASP Dependency Check"){
            steps{
                dependencyCheck additionalArguments: '--scan ./ ' , odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage("Docker Build & Push"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {

                        sh "docker build -t petclinic ."
                        sh "docker tag petclinic rameshbabuts/pet-clinic:latest "
                        sh "docker push rameshbabuts/pet-clinic:latest "

                    }
                }
            }
        }

            stage("TRIVY"){
                steps{
                    sh "trivy image rameshbabuts/pet-clinic:latest"
            }
        }

            stage("Deploy Using Docker"){
                steps{
                    sh " docker run -d --name pet1 -p 8082:8080 rameshbabuts/pet-clinic:latest "
                   }
                }

        }
    }    
       
